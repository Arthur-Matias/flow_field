var n=Object.defineProperty;var c=(h,t,i)=>t in h?n(h,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):h[t]=i;var e=(h,t,i)=>(c(h,typeof t!="symbol"?t+"":t,i),i);class d{constructor(t){e(this,"effect");e(this,"pos");e(this,"speed");e(this,"history");e(this,"maxLength");e(this,"angle");e(this,"speedModifier");e(this,"timer");e(this,"color");e(this,"colors");this.effect=t,this.pos={x:Math.floor(Math.random()*this.effect.width),y:Math.floor(Math.random()*this.effect.height)},this.speed={x:0,y:0},this.speedModifier=Math.floor(Math.random()*5+1),this.history=[{x:this.pos.x,y:this.pos.y}],this.maxLength=Math.floor(Math.random()*200+10),this.angle=0,this.timer=this.maxLength*2,this.colors=["#0A2F50","#17395A","#204262","#2A4B68","#395A7F"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)]}draw(t){t.beginPath(),t.moveTo(this.history[0].x,this.history[0].y);for(let i=0;i<this.history.length;i++)t.lineTo(this.history[i].x,this.history[i].y);t.strokeStyle=this.color,t.stroke()}update(){if(this.timer--,this.timer>=1){let t=Math.floor(this.pos.x/this.effect.cellSize),s=Math.floor(this.pos.y/this.effect.cellSize)*this.effect.cols+t;this.angle=this.effect.flowField[s],this.speed.x=Math.cos(this.angle),this.speed.y=Math.sin(this.angle),this.pos.x+=this.speed.x*this.speedModifier,this.pos.y+=this.speed.y*this.speedModifier,this.history.push({x:this.pos.x,y:this.pos.y}),this.history.length>this.maxLength&&this.history.shift()}else this.history.length>1?this.history.shift():this.reset()}reset(){this.pos={x:Math.floor(Math.random()*this.effect.width),y:Math.floor(Math.random()*this.effect.height)},this.history=[{x:this.pos.x,y:this.pos.y}],this.timer=this.maxLength*2}}class u{constructor(t){e(this,"canvas");e(this,"height");e(this,"width");e(this,"particles");e(this,"totalParticles");e(this,"cellSize");e(this,"rows");e(this,"cols");e(this,"flowField");e(this,"curve");e(this,"zoom");e(this,"debug");e(this,"curveInput");e(this,"zoomInput");e(this,"cellSizeInput");e(this,"totalParticlesInput");this.canvas=t,this.height=this.canvas.height,this.width=this.canvas.width,this.particles=[],this.totalParticles=2e3,this.cellSize=5,this.rows=0,this.cols=0,this.flowField=[],this.curve=2.5,this.zoom=.05,this.debug=!1,this.init(),this.curveInput=document.getElementById("curve-input"),this.zoomInput=document.getElementById("zoom-input"),this.cellSizeInput=document.getElementById("cell-size-input"),this.totalParticlesInput=document.getElementById("total-particles-input"),this.curveInput.value=this.curve.toString(),this.zoomInput.value=this.zoom.toString(),this.cellSizeInput.value=this.cellSize.toString(),this.totalParticlesInput.value=this.totalParticles.toString(),this.curveInput.oninput=i=>{let s=i.target;this.curve=Number(s.value),this.init()},this.zoomInput.oninput=i=>{let s=i.target;this.zoom=Number(s.value),this.init()},this.cellSizeInput.oninput=i=>{let s=i.target;this.cellSize=Number(s.value),this.init()},this.totalParticlesInput.oninput=i=>{let s=i.target;this.totalParticles=Number(s.value),this.init()},window.addEventListener("keydown",i=>{i.key==="d"&&(this.debug=!this.debug)}),window.addEventListener("resize",i=>{const s=i.target;this.resize(s.innerWidth,s.innerHeight)})}init(){this.rows=Math.floor(this.height/this.cellSize),this.cols=Math.floor(this.width/this.cellSize),this.flowField=[],this.particles=[];for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++){let s=(Math.cos(i*this.zoom)+Math.sin(t*this.zoom))*this.curve;this.flowField.push(s)}for(let t=0;t<this.totalParticles;t++)this.particles.push(new d(this))}drawGrid(t){t.save(),t.strokeStyle="white",t.lineWidth=.3;for(let i=0;i<this.cols;i++)t.beginPath(),t.moveTo(this.cellSize*i,0),t.lineTo(this.cellSize*i,this.height),t.stroke();for(let i=0;i<this.cols;i++)t.beginPath(),t.moveTo(0,this.cellSize*i),t.lineTo(this.width,this.cellSize*i),t.stroke();t.restore()}render(t){this.debug&&this.drawGrid(t),this.particles.forEach(i=>{i.draw(t),i.update()})}resize(t,i){this.canvas.width=t,this.canvas.height=i,this.width=this.canvas.width,this.height=this.canvas.height,this.init()}}const o=document.getElementById("app-canvas"),l=o.getContext("2d");o.width=window.innerWidth;o.height=window.innerHeight;l.fillStyle="white";l.strokeStyle="white";l.lineWidth=1;const r=new u(o);console.log(r);function a(){l.clearRect(0,0,o.width,o.height),r.render(l),requestAnimationFrame(a)}a();
